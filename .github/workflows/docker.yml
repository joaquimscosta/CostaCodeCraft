name: Build Docker Container
on:
  workflow_call: 
    outputs:
      DOCKER_IMAGE:
        value: ${{ jobs.docker.outputs.DOCKER_IMAGE }}
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: joaquimscosta/costacodecraft-ui
permissions:
  id-token: write

jobs:
  docker:
    name: Build Container
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
      packages: write
      security-events: write
    outputs:
      DOCKER_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract tag name
        id: extract_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ "$TAG_NAME" == v* ]]; then
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          else
            echo "TAG_NAME=test" >> $GITHUB_ENV
          fi

      - name: Print Var
        run: echo "TAG_NAME = ${{ env.TAG_NAME }}"  

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Docker metadata"
        id: meta
        uses: docker/metadata-action@v5
        with: 
          images: ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}
      
      - name: Build and Export image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          load: true
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{steps.meta.outcome.labels}}
          tags: |
            ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}

      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
          fail-build: false
          severity-cutoff: high

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Publish container image
        if: github.event_name != 'pull_request'
        run: |
          docker push ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
